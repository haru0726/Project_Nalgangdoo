generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  accountId Int @id @default(autoincrement())
  userId String @unique // 유저 아이디
  userName String @unique // 닉네임
  password String
  characters CharacterList[] // 중간 테이블로 N:M 관계 맺기
  userCash Int @default(5000) // 캐쉬
  winCount Int @default(0)
  loseCount Int @default(0)
  drowCount Int @default(0)
  rankPoint Int @default(100) // 랭킹 포인트. 플레이어 간의 점수 차가 클 수록 증감되는 값이 크면 좋겠다.
  tier String @default("Bronze")
  super Boolean @default(false) // 관리자인지 인가 처리용
  createAt DateTime @default(now())

  @@map("Account")
}

model Character {
  characterId       Int             @id @default(autoincrement())
  name              String          @unique
  speed             Int
  goalDetermination Int
  shootPower Int
  defense Int
  stamina Int
  star Int @default(4)
  accountCharacters CharacterList[] // 중간 테이블로 N:M 관계 맺기

  @@map("Character")
}

model CharacterList {
  characterListId   Int       @id @default(autoincrement())
  accountId         Int
  characterId       Int
  quantity          Int       @default(1)
  isFormation       Boolean   @default(false)
  level             Int       @default(0)
  ceiling           Int       @default(0)
  accountRelation   Account   @relation(fields: [accountId], references: [accountId], onDelete: Cascade)
  characterRelation Character @relation(fields: [characterId], references: [characterId], onDelete: Cascade)

  @@unique([accountId, characterId])
  @@index([characterId], map: "CharacterList_characterId_fkey")
}
